import numpy as np 
import matplotlib.pyplot as plt

def lossFunction(x):
  return x**2

def gradient(x):
  return 2*x

learningRate = 0.1
x = 5
steps = 20

xValues =[]
lossValues = []

for step in range(steps):
  xValues.append(x)
  lossValues.append(lossFunction(x))
  x -= learningRate * gradient(x)

xRange = np.linspace(-5 , 5 ,100)
yRange = lossFunction(xRange)


plt.figure(figsize=(10,8))
plt.plot(xRange , yRange , label ='Loss Function (y = x^2)')
plt.plot(xValues , lossValues ,linestyle ='--' , color = 'red')
plt.scatter(xValues , lossValues , color = 'red' ,label = ' Gradient Decent Steps')
plt.xlabel('x')
plt.ylabel('Loss (y = x^2)')
plt.title('Gradient Descent on a Quadratic Loss Function')
plt.legend()
plt.show()
